name: Terraform CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "terraform/**"
  pull_request:
    paths:
      - "terraform/**"

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      pull-requests: "write"

    env:
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}

      TF_VAR_initial_db_password: ${{ secrets.TF_VAR_initial_db_password }}
      TF_VAR_ssh_public_key_path: "~/.ssh/id_rsa.pub"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SA_EMAIL }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Create SSH Public Key File
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCE_SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        working-directory: ./terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Terraform Plan and Comment
        if: github.event_name == 'pull_request'
        uses: dflook/terraform-plan@v1
        with:
          path: terraform
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -no-color
        working-directory: ./terraform
